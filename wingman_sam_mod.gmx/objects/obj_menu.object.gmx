<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create menu objects and variables

// Set variables
selected_item = noone;
menu_indicator = noone;
menu_width = 116;
menu_height = 92;
btn_height = 18;

var new_x = x + 66 ;
var new_y = y + 10;

menu_sprites = ds_list_create();
ds_list_add(menu_sprites, spr_menu_play, spr_menu_options, spr_menu_info, spr_menu_credits, spr_menu_quit);

menu_options = ds_list_create();

var temp_obj = noone;

menu_indicies = ds_list_create();

// Now the options
for(var interval = 0; interval &lt; ds_list_size(menu_sprites); interval++)
{
    
    menu_options[| interval] = instance_create(new_x, new_y, obj_menu_btn);
    menu_options[| interval].sprite_index = menu_sprites[| interval];
    
    ds_list_add(menu_indicies, new_y);
    
    new_y += btn_height;
}

selected_item = menu_options[| 0];
selected_item.selected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// More dirty hax

switch(selected_item.sprite_index)
{
    case spr_menu_play:
        if(room_exists(room_next(room)))
            room_goto_next();
        break;
    case spr_menu_options:
        room_goto(rm_options);
        break;
    case spr_menu_info:
        room_goto(rm_help);
        break;
    case spr_menu_credits:
        room_goto(rm_credits);
        break;
    case spr_menu_quit:
        game_end();
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw menu background, border, selectables and indicator


// Background first
draw_set_alpha(0.5);
draw_set_color(c_navy);
draw_rectangle(x, y, x + menu_width, y + menu_height, false);
draw_set_alpha(1);

// Border next
draw_set_color(c_white);
draw_rectangle(x, y, x + menu_width, y + menu_height, true);

// Then the indicator
draw_sprite(spr_menu_arrow, 0, selected_item.x - 55, selected_item.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move down if possible

selection_index = ds_list_find_index(menu_options, selected_item);

with(obj_menu_btn)
{
    selected = false;
}

if(selection_index != ds_list_size(menu_options) - 1)
{
    selected_item = menu_options[| selection_index + 1];
}
else
{
    selected_item = menu_options[| 0];
}

selected_item.selected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move up if possible

selection_index = ds_list_find_index(menu_options, selected_item);

with(obj_menu_btn)
{
    selected = false;
}

if(selection_index != 0)
{
    selected_item = menu_options[| selection_index - 1];
}
else
{
    selected_item = menu_options[| ds_list_size(menu_options) - 1];
}
selected_item.selected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fire the event

event_perform(ev_other, ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
