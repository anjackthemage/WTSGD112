<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_battle_main</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// Character HP map
char_hp = ds_map_create();
ds_map_add(char_hp, obj_hunter, obj_hunter.hit_points);
ds_map_add(char_hp, obj_monk, obj_monk.hit_points);
ds_map_add(char_hp, obj_librarian, obj_librarian.hit_points);
ds_map_add(char_hp, obj_doctor, obj_doctor.hit_points);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw battle HUD
// HUD background
draw_sprite(sprite_index, 0, x, y);

draw_set_halign(fa_right);
draw_set_valign(fa_middle);
draw_set_color(c_white);

// Character Names
// TODO: this should be a loop

draw_text(x + ((3/4) * sprite_width) - 5, y + ((sprite_height / 5) * 1), obj_hunter.name);
draw_text(x + ((3/4) * sprite_width) - 5, y + ((sprite_height / 5) * 2), obj_monk.name);
draw_text(x + ((3/4) * sprite_width) - 5, y + ((sprite_height / 5) * 3), obj_librarian.name);
draw_text(x + ((3/4) * sprite_width) - 5, y + ((sprite_height / 5) * 4), obj_doctor.name);

// Character HP
// TODO: this should also be a list
draw_rectangle(x + ((3/4) * sprite_width) + 5, y + ((sprite_height / 5) * 1) - (string_height(obj_hunter.name)/2), x + ((3/4) * sprite_width) + 5 + 175, y + ((sprite_height / 5) * 1) + string_height(obj_hunter.name), true);
draw_rectangle(x + ((3/4) * sprite_width) + 5, y + ((sprite_height / 5) * 2) - (string_height(obj_monk.name)/2), x + ((3/4) * sprite_width) + 5 + 175, y + ((sprite_height / 5) * 2) + string_height(obj_monk.name), true);
draw_rectangle(x + ((3/4) * sprite_width) + 5, y + ((sprite_height / 5) * 3) - (string_height(obj_librarian.name)/2), x + ((3/4) * sprite_width) + 5 + 175, y + ((sprite_height / 5) * 3) + string_height(obj_librarian.name), true);
draw_rectangle(x + ((3/4) * sprite_width) + 5, y + ((sprite_height / 5) * 4) - (string_height(obj_doctor.name)/2), x + ((3/4) * sprite_width) + 5 + 175, y + ((sprite_height / 5) * 4) + string_height(obj_doctor.name), true);
draw_set_color(c_green);
draw_rectangle(x + ((3/4) * sprite_width) + 6, y + ((sprite_height / 5) * 1) - (string_height(obj_hunter.name)/2) + 2, x + ((3/4) * sprite_width) + 4 + ((175 / obj_hunter.hit_points_max) * obj_hunter.hit_points), y + ((sprite_height / 5) * 1) + string_height(obj_hunter.name) - 1, false);
draw_rectangle(x + ((3/4) * sprite_width) + 6, y + ((sprite_height / 5) * 2) - (string_height(obj_monk.name)/2) + 2, x + ((3/4) * sprite_width) + 4 + ((175 / obj_monk.hit_points_max) * obj_monk.hit_points), y + ((sprite_height / 5) * 2) + string_height(obj_monk.name) - 1, false);
draw_rectangle(x + ((3/4) * sprite_width) + 6, y + ((sprite_height / 5) * 3) - (string_height(obj_librarian.name)/2) + 2, x + ((3/4) * sprite_width) + 4 + ((175 / obj_librarian.hit_points_max) * obj_librarian.hit_points), y + ((sprite_height / 5) * 3) + string_height(obj_librarian.name) - 1, false);
draw_rectangle(x + ((3/4) * sprite_width) + 6, y + ((sprite_height / 5) * 4) - (string_height(obj_doctor.name)/2) + 2, x + ((3/4) * sprite_width) + 4 + ((175 / obj_doctor.hit_points_max) * obj_doctor.hit_points), y + ((sprite_height / 5) * 4) + string_height(obj_doctor.name) - 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
