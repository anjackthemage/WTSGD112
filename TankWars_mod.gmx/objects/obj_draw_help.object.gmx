<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize variables

object_descriptions = ds_map_create();

ds_map_add(object_descriptions, "obj_wall_1", "This is a standard, impassable wall. However, this wall is apparently made of rubber, because your tank will bounce off (sometimes awarkdly) when impacting it. This type of wall cannot be destroyed.");
ds_map_add(object_descriptions, "obj_wall_2", "This is one of them 'trick' walls. You can destroy it with shells or rockets but it will just reappear a few seconds later.");
ds_map_add(object_descriptions, "obj_tank_parent", "This is your, or your opponent's, tank. Drive it around with the assigned controls (see below).");
ds_map_add(object_descriptions, "obj_shell", "This little guy is your primary weapon. Hitting the appropriate button (see below) will fire one of these guys for each keypress. Use them to destroy your opponent's tank!");
ds_map_add(object_descriptions, "obj_rocket", "Tank-seeking rockets! Better than shells but limited ammo. When you have appropriate ammo, fire rockets with the alternate fire key (see below).");
ds_map_add(object_descriptions, "obj_bouncing_bomb", "Follow the bouncing bomb! Just not too closely, because they're dangerous. These bombs will bounce off of most walls, to help you get that sweet trick shot!");
ds_map_add(object_descriptions, "obj_pickup", "A repair kit, for when you've narrowly escaped defeat. Pick it up to restore up to 50% of your tank's health.");
ds_map_add(object_descriptions, "obj_mud_parent", "Road hazards! Mud will slow down your tank, so don't get caught in this stuff during a firefight.");
ds_map_add(object_descriptions, "obj_ice_parent", "Ice capades! Gracefully glide across this particular hazard when your tank loses traction. Or just fumble about, bouncing off of walls uncontrollably. Whatever works for you.");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw informative text

// Find the mid point of the view
var mid_x = view_xview[0] + (view_wview[0] / 2);
var mid_y = view_yview[0] + (view_hview[0] / 2);

// Always draw tank controls in the bottom half of the view
draw_set_font(fnt_score);
draw_set_halign(fa_center);
draw_text(mid_x, mid_y + 6, "Movement Controls:");

var low_x = view_wview[0] / 4;
var low_y = mid_y + (view_hview[0] / 4);

draw_set_color(c_white);
draw_set_font(fnt_hud);

var next_x = low_x;
var next_y = low_y - 25;

var tank_controls = obj_tank_controller.tank_controls;
var controls_title = ds_list_create();
ds_list_add(controls_title, "Left Tank", "Right Tank");

for(var interval = 0; interval &lt; 2; interval++)
{
    draw_text(next_x, next_y, controls_title[| interval]);
    
    // Cycle through controls for tanks
    var cur_tank = obj_tank_controller.tanks[| interval];
    var cur_control_set = tank_controls[| interval];
    var cur_control = ds_map_find_first(cur_control_set);

    do
    {
        next_y += 16;
        draw_text(next_x, next_y, cur_control + ": " + get_key_common_name(cur_control_set[? cur_control]));
        
        cur_control = ds_map_find_next(cur_control_set, cur_control);
    }
    until(is_undefined(cur_control))
    next_x *= 3;
    next_y = low_y - 25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
