<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize things

// All the tanks
tanks = ds_list_create();
ds_list_add(tanks, obj_tank_1, obj_tank_2);

// Local player: tank 1
tank_one_control = ds_map_create();

ds_map_add(tank_one_control, "Forward", "W");
ds_map_add(tank_one_control, "Reverse", "S");
ds_map_add(tank_one_control, "Turn Left", "A");
ds_map_add(tank_one_control, "Turn Right", "D");
ds_map_add(tank_one_control, "Weapon", vk_space);
ds_map_add(tank_one_control, "Alternate", vk_control);

// Local player: tank 2
tank_two_control = ds_map_create();

ds_map_add(tank_two_control, "Forward", vk_up);
ds_map_add(tank_two_control, "Reverse", vk_down);
ds_map_add(tank_two_control, "Turn Left", vk_left);
ds_map_add(tank_two_control, "Turn Right", vk_right);
ds_map_add(tank_two_control, "Weapon", vk_enter);
ds_map_add(tank_two_control, "Alternate", vk_delete);

// All the controls
tank_controls = ds_list_create();
ds_list_add(tank_controls, tank_one_control, tank_two_control);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the appropriate tank based upon key being pressed

for(var interval = 0; interval &lt; 2; interval++)
{

    // Cycle through controls for tanks
    var cur_tank = tanks[| interval];
    
    var cur_control_set = tank_controls[| interval];
    var cur_control = ds_map_find_first(cur_control_set);

    do
    {
        if (is_string(cur_control_set[? cur_control]))
        {
            // This is a regular alphanumeric key
            if(keyboard_check(ord(cur_control_set[? cur_control])))
            {
                move_tank(cur_tank, cur_control);
            }
        }
        else
        {
            // This is a special key (non-alphanumeric)
            if(keyboard_check(cur_control_set[? cur_control]))
            {
                if(cur_control == "Alternate")
                {
                    with(cur_tank)
                    {
                        event_perform(ev_other, ev_user3);
                    }
                }
                else if (cur_control == "Weapon")
                {
                    with(cur_tank)
                    {
                        var projectile = instance_create(x + lengthdir_x(32, image_angle), y + lengthdir_y(32, image_angle), obj_shell);
                        projectile.fired_from = id;
                        projectile.direction = image_angle;
                    }
                }
                else
                {
                    move_tank(cur_tank, cur_control);
                }
            }
        }
        cur_control = ds_map_find_next(cur_control_set, cur_control);
    }
    until(is_undefined(cur_control))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
