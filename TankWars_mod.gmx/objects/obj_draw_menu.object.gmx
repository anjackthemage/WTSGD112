<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

menu_buttons = ds_map_create();
// TODO: Change this back to a list, since we're not even using the value
ds_map_add(menu_buttons, "Start", false);
ds_map_add(menu_buttons, "Help", false);
//ds_map_add(menu_buttons, "Options", false);
ds_map_add(menu_buttons, "Quit", false);

num_buttons = ds_map_size(menu_buttons);

selected_item = ds_map_find_first(menu_buttons);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw menu

draw_set_font(fnt_hud);
draw_set_halign(fa_left);

total_menu_height = (string_height(ds_map_find_first(menu_buttons)) + 4) * num_buttons;
total_menu_width = 0;

var next_item = ds_map_find_first(menu_buttons);

do
{
    var new_length = string_width(next_item);
    if( new_length &gt; total_menu_width)
    {
        total_menu_width = new_length;
    }
    next_item = ds_map_find_next(menu_buttons, next_item);
}
until (is_undefined(next_item))

//total_menu_height += 3 * num_buttons;
total_menu_width += 10;

draw_set_color(c_black);
draw_set_alpha(0.5);
draw_rectangle(x - (total_menu_width / 2), y - (total_menu_height / 2), x + (total_menu_width / 2), y + (total_menu_height / 2), false);
draw_set_alpha(1);
draw_set_color(c_white);
draw_rectangle(x - (total_menu_width / 2), y - (total_menu_height / 2), x + (total_menu_width / 2), y + (total_menu_height / 2), true);


var next_item = ds_map_find_first(menu_buttons);
var count = 0;
do
{
    draw_text(x - (total_menu_width / 2) + 5, (y - (total_menu_height / 2)) + ((string_height(next_item) + 4) * count) + 5, next_item);
    if(next_item == selected_item)
    {
        draw_rectangle(x - (total_menu_width / 2) + 2, (y - (total_menu_height / 2)) + ((string_height(next_item) + 4) * count) + 3, x + (total_menu_width / 2) - 2, (y - (total_menu_height / 2)) + ((string_height(next_item) + 4) * count) + string_height(next_item) + 3, true);
    }
    next_item = ds_map_find_next(menu_buttons, next_item);
    count++;
}
until (is_undefined(next_item))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cycle down-ish

selected_item = ds_map_find_next(menu_buttons, selected_item);

if(is_undefined(selected_item))
{
    selected_item = ds_map_find_first(menu_buttons);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cycle up-ish

selected_item = ds_map_find_previous(menu_buttons, selected_item);

if(is_undefined(selected_item))
{
    selected_item = ds_map_find_last(menu_buttons);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do what the button say

switch(selected_item)
{
    case "Start":
        room = room_next(room);
        break;
    case "Help":
        room_goto(rm_help);
        break;
    case "Options":
        room_goto(rm_options);
        break;
    default:
        game_end();
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
